services:
  - name: frontend
    plan: auto
    buildCommand: |
      cd frontend
      npm install
      npm run build
    startCommand: npm run start
    env: {}
    ports:
      - port: ${FRONTEND_HOST_PORT}
        protocol: HTTP
    healthCheckPath: /
    source: .
    scaling:
      type: manual
      minInstances: 1
      maxInstances: 1
    environment: {}

  - name: backend
    plan: auto
    buildCommand: |
      cd backend
      npm install
    startCommand: npm run start
    env: {}
    ports:
      - port: ${BACKEND_HOST_PORT}
        protocol: HTTP
    healthCheckPath: /
    source: .
    scaling:
      type: manual
      minInstances: 1
      maxInstances: 1
    environment: {}

  - name: mongo
    plan: starter
    image: mongo
    env:
      MONGODB_INITDB_ROOT_USERNAME: ${MONGODB_INITDB_ROOT_USERNAME}
      MONGODB_INITDB_ROOT_PASSWORD: ${MONGODB_INITDB_ROOT_PASSWORD}
    ports:
      - port: 27017
        protocol: TCP
    healthCheckPath: /
    environment: {}
    scaling:
      type: manual
      minInstances: 1
      maxInstances: 1

  - name: mongo-express
    plan: starter
    image: mongo-express
    env:
      ME_CONFIG_MONGODB_ADMINUSERNAME: username
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
    ports:
      - port: ${MONGO_EXPRESS_HOST_PORT}
        protocol: HTTP
    healthCheckPath: /
    scaling:
      type: manual
      minInstances: 1
      maxInstances: 1
    environment: {}

networks: []
volumes: {}